{"version":3,"sources":["App.js","index.js"],"names":["myAlgoWallet","Pipeline","init","App","props","inputRecipient","event","setState","recipient","target","value","inputAmount","amount","inputNote","note","handleCheckChange","main","state","myAddress","appArgs","txID","align","class","className","name","type","checked","this","onChange","wallet","context","returnTo","AlgoOpt","appId","defaultValue","AlgoAppCallWTxn","index","Component","ReactDOM","render","document","getElementById"],"mappings":"6eAKMA,EAAeC,IAASC,OAuFfC,E,kDA9Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,UAAWF,EAAMG,OAAOC,SAdvB,EAiBnBC,YAAc,SAACL,GACb,EAAKC,SAAS,CAACK,OAAQN,EAAMG,OAAOC,SAlBnB,EAqBnBG,UAAY,SAACP,GACX,EAAKC,SAAS,CAACO,KAAMR,EAAMG,OAAOC,SAtBjB,EAyBnBK,kBAAoB,WACpB,EAAKR,SAAS,CAACS,MAAQ,EAAKC,MAAMD,OAAO,kBAAMf,IAASe,KAAO,EAAKC,MAAMD,SAxBxE,EAAKC,MAAQ,CACXD,MAAM,EACNE,UAAW,GACXV,UAAW,6DACXI,OAAQ,IACRO,QAAS,GACTL,KAAM,GACNM,KAAM,IATS,E,0CA+BnB,WACA,OAAO,sBAAKC,MAAM,SAASC,MAAM,OAA1B,UACP,4CACA,gDACA,4FACA,8GACA,sBAAKA,MAAM,gBAAX,UACE,0CAGF,uBACIC,UAAU,mBACVC,KAAK,UACLC,KAAK,WACLC,QAASC,KAAKV,MAAMD,KACpBY,SAAUD,KAAKZ,uBAEf,cAAC,IAAD,CAAYc,OAAQ7B,EAAc8B,QAASH,KAAMI,SAAU,cAC3D,6BAAK,eAAiBJ,KAAKV,MAAMC,YACjC,cAACc,EAAA,EAAD,CAASC,MAAO,IAChB,uBACA,iCACE,wBAAOX,MAAM,aAAb,0BAEE,uBAAOG,KAAK,OAAOH,MAAM,eAAeM,SAAUD,KAAKd,eACjD,uBACR,wBAAOS,MAAM,aAAb,wDAEE,uBAAOG,KAAK,SAASH,MAAM,eAAeM,SAAUD,KAAKhB,YAAauB,aAAc,YAGxF,cAACC,EAAA,EAAD,CACAC,MAAO,EACPjB,QAAS,CAAE,qBAAsB,YAAa,WAAY,aAC1DX,UAAWmB,KAAKV,MAAMT,UACtBI,OAAQe,KAAKV,MAAML,OACnBE,KAAMa,KAAKV,MAAMH,KACjBI,UAAWS,KAAKV,MAAMC,UACtBW,OAAQ7B,EACR8B,QAASH,KACTI,SAAU,SAEV,6BAAK,mBAAqBJ,KAAKV,MAAMG,c,GA3EzBiB,aCNlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a7107abb.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { AlgoButton, Pipeline} from 'pipeline-express-react'\nimport { AlgoOpt, AlgoAppCallWTxn } from 'pipeline-ui'\nimport './index.css'\n\nconst myAlgoWallet = Pipeline.init();\nconst finderOptions = [\n  { value: 'Front', label: 'Front' },\n  { value: 'End', label: 'End' },\n  { value: 'Any Where', label: 'Any Where' }\n]\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      main: true,\n      myAddress: \"\",\n      recipient: \"PHILMO7LWKWMTSC6O73SJUJBHD7U5JU4RBODNWN37VVRT7ARMTTJHLS7YA\",\n      amount: 3000,\n      appArgs: \"\",\t    \n      note: \"\",\n      txID: \"\"\n    }\n  }\n\n  inputRecipient = (event) => {\n    this.setState({ recipient: event.target.value });\n  }\n\n  inputAmount = (event) => {\n    this.setState({amount: event.target.value});\n  }\n\n  inputNote = (event) => {\n    this.setState({note: event.target.value});\n  }\n\n  handleCheckChange = () => {\n  this.setState({main: ! this.state.main}, () => Pipeline.main = this.state.main)\n\n  }\n\n\n  render() {\n  return <div align=\"center\" class=\"card\">    \n  <h1>phil.works</h1>\n  <h2>Address Finder</h2>\n  <h2>Under Maintainence while service indexer syncs to MainNet.</h2>\n  <h4>Use the form below to start a search request for an Algorand vanity address.</h4>\t\t  \n  <div class=\"toggle-select\">\n    <h5>\n      MainNet:\n    </h5>\n  <input\n      className=\"form-check-input\"\n      name=\"mainnet\" \n      type=\"checkbox\"\n      checked={this.state.main}\n      onChange={this.handleCheckChange} />\n  </div>\n      <AlgoButton wallet={myAlgoWallet} context={this} returnTo={\"myAddress\"} />\n      <h3>{\"My Address: \" + this.state.myAddress}</h3>\n      <AlgoOpt appId={1} />\n      <br></br>\t\t  \n      <form>\n        <label class=\"form-label\">\n          Desired Text:\n          <input type=\"text\" class=\"form-control\" onChange={this.inputNote} />\n        </label><br></br>\n        <label class=\"form-label\">\n         Send MicroAlgo (anything over 3k is a tip):\n          <input type=\"number\" class=\"form-control\" onChange={this.inputAmount} defaultValue={3000} />\n        </label>\n      </form>\n      <AlgoAppCallWTxn\n      index={0} //If ASA, must be a numeric index value !== 0\n      appArgs={[ 'str:FindMeThisName', 'str:Rekey', 'str:test', 'str:Front'  ]}\n      recipient={this.state.recipient} //string value\n      amount={this.state.amount} //integer value in micro Algos\n      note={this.state.note} //string value\n      myAddress={this.state.myAddress} //string value\n      wallet={myAlgoWallet} //reference to an instance of Pipeline.init(); that is called once when the app is initialized\n      context={this}\n      returnTo={\"txID\"}// string value of state key to return the transaction id\n      />\n      <h3>{\"Transaction ID: \" + this.state.txID}</h3>\n   </div>\n  }\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}